# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: {{ elasticsearch_cluster_name }}
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: {{ inventory_hostname }}
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.data: {{ elasticsearch_directories.elastic_lib_directory }}
#
# Path to log files:
#
path.logs: {{ elasticsearch_directories.elastic_log_directory }}
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# By default Elasticsearch is only accessible on localhost. Set a different
# address here to expose this node on the network:
#
network.host: _site_
#
# By default Elasticsearch listens for HTTP traffic on the first free port it
# finds starting at 9200. Set a specific HTTP port here:
#
http.port: 9200
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when this node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
{% set list_of_hosts = [] %}
{% for worker in groups['elastic_cluster'] %}
{% set _ = list_of_hosts.append(hostvars[worker]['ansible_host']) %}
{% endfor %}
discovery.seed_hosts: {{ list_of_hosts | to_json }}

#
# Bootstrap the cluster using an initial set of master-eligible nodes:
#

{% set list_of_hostnames = [] %}
{% for worker in groups['master'] %}
{% set _ = list_of_hostnames.append(worker) %}
{% endfor %}
cluster.initial_master_nodes: {{ list_of_hostnames | to_json }}
#
# For more information, consult the discovery and cluster formation module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Allow wildcard deletion of indices:
#
# action.destructive_requires_name: false


# Enable security features
xpack.security.enabled: true

xpack.security.enrollment.enabled: true

# Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents
xpack.security.http.ssl:
  enabled: true
  keystore.path: {{ elasticsearch_directories.certs_dir }}/{{ elasticsearch_pkcs12_name }}
  truststore.path: {{ elasticsearch_directories.certs_dir }}/{{ elasticsearch_truststore_file }}

# Enable encryption and mutual authentication between cluster nodes
xpack.security.transport.ssl:
  enabled: true
  verification_mode: certificate
  keystore.path: {{ elasticsearch_directories.certs_dir }}/{{ elasticsearch_pkcs12_name }}
  truststore.path: {{ elasticsearch_directories.certs_dir }}/{{ elasticsearch_truststore_file }}
# Create a new cluster with the current node only
# Additional nodes can still join the cluster later

# Allow HTTP API connections from anywhere
# Connections are encrypted and require user authentication
# http.host: 0.0.0.0

# Allow other nodes to join the cluster from anywhere
# Connections are encrypted and mutually authenticated
# transport.host: 0.0.0.0

network.bind_host: {{ ansible_host }}
network.publish_host: {{ ansible_host }}

{% set roles = [] %}
{% if inventory_hostname in groups['master'] %}
{% set _ = roles.append("master") %}
{% endif %}
{% if inventory_hostname in groups['data_nodes'] %}
{% set _ = roles.append("data") %}
{% endif %}
{% if inventory_hostname in groups['ingest_nodes'] %}
{% set _ = roles.append("ingest") %}
{% endif %}
{% if roles | length == 0 %}
{% set _ = roles.append("data") %}
{% set _ = roles.append("ingest") %}
{% endif %}

node.roles: {{ roles | to_json }}

xpack.security.autoconfiguration.enabled: true


{% include 'extra_configs.yml.j2' %}



